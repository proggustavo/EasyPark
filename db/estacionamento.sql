/* APAGANDO O BANCO DE DADOS PARA RECRIAR*/
DROP DATABASE IF EXISTS DBESTACIONAMENTO;

/*CRIANDO O BANCO DE DADOS*/
CREATE DATABASE DBESTACIONAMENTO;

/*SELECIONANDO O BANCO DE DADOS*/
USE DBESTACIONAMENTO;

/*CRIANDO A TABELA DE VAGA*/
CREATE TABLE VAGA (
  IDVAGA INT
  , DISTANCIA DECIMAL(8,2)
  , TIPO VARCHAR(10)
  , SITUACAO VARCHAR(10)
  , PRIMARY KEY (IDVAGA)
);

/*CRIANDO A TABELA DE TICKET*/
CREATE TABLE TICKET (
  IDTICKET INT NOT NULL AUTO_INCREMENT
  , IDVAGA INT
  , DHEMISSAO DATETIME
  , DHENTRADA DATETIME
  , DHPAGAMENTO DATETIME
  , DHSAIDA DATETIME
  , DTFINALIZADO DATETIME
  , VALOR DECIMAL(8,2)
  , PRIMARY KEY (IDTICKET)
  , FOREIGN KEY (IDVAGA) REFERENCES VAGA (IDVAGA)
);



-- CRIANDO TABELA DE PREÇOS

CREATE TABLE VALOR(
	VALORPRIMEIRAHORA DOUBLE NOT NULL,
    VALORHORA DOUBLE NOT NULL	

);

/*INCLUINDO AS VAGAS DE ESTACIONAMENTO*/
INSERT INTO VAGA VALUES (1,4.00,'NORMAL','LIVRE');
INSERT INTO VAGA VALUES (2,3.00,'NORMAL','LIVRE');
INSERT INTO VAGA VALUES (3,2.00,'NORMAL','LIVRE');
INSERT INTO VAGA VALUES (4,1.00,'ESPECIAL','LIVRE');





-- ----------------------------- EMITIR TICKET -----------------------------------



DELIMITER $$
CREATE FUNCTION EMITIRTICKET ( pTIPOVAGA VARCHAR(4500)) RETURNS VARCHAR(4500)
READS SQL DATA
DETERMINISTIC
BEGIN
	DECLARE vIDVAGA INT;
    DECLARE vRESULTADO VARCHAR(4500);
	-- VAGA NORMAL
    IF pTIPOVAGA = "NORMAL" THEN
    
		SELECT IDVAGA INTO vIDVAGA FROM VAGA WHERE SITUACAO = 'LIVRE' and TIPO = 'NORMAL'ORDER BY DISTANCIA LIMIT 1;
			-- VERIFICANDO SE RETORNOU ALGUMA VAGA LIVRE
		   IF vIDVAGA IS NOT NULL THEN
           
           -- UPDATE NA SITUAÇÃO DA VAGA INSERINDO , CRIANDO O TICKET E DATA DE EMISSAO, E RETORNANDO O RESULTADO 
           
				UPDATE VAGA SET SITUACAO = "OCUPADA" WHERE IDVAGA = vIDVAGA;
				INSERT INTO TICKET VALUES(DEFAULT, vIDVAGA, NOW(), NULL, NULL, NULL, NULL, NULL);		
				SET vRESULTADO = CONCAT('ESTACIONE NA VAGA NÚMERO ', vIDVAGA);
                
			ELSE
					SET vRESULTADO = "SEM VAGAS DISPONÍVEIS";
			END IF;
            
    -- --------------------------------------------- VAGA ESPECIAL        
	ELSEIF pTIPOVAGA = "ESPECIAL" THEN 
    
		SELECT IDVAGA INTO vIDVAGA FROM VAGA WHERE SITUACAO = 'LIVRE' and TIPO = 'ESPECIAL'ORDER BY DISTANCIA LIMIT 1;
        
        IF vIDVAGA IS NOT NULL THEN
        
				-- UPDATE NA SITUAÇÃO DA VAGA INSERINDO , CRIANDO O TICKET E DATA DE EMISSAO, E RETORNANDO O RESULTADO 
				UPDATE VAGA SET SITUACAO = "OCUPADA" WHERE IDVAGA = vIDVAGA;
				INSERT INTO TICKET VALUES(DEFAULT, vIDVAGA, NOW(), NULL, NULL, NULL, NULL, NULL);	
				
				SET vRESULTADO = CONCAT('ESTACIONE NA VAGA NÚMERO ', vIDVAGA);
                
-- NO CASO DE NÃO TER VAGAS ESPECIAIS DISPONÍVEIS
		ELSE
				SELECT IDVAGA INTO vIDVAGA FROM VAGA WHERE SITUACAO = 'LIVRE' and TIPO = 'NORMAL'ORDER BY DISTANCIA LIMIT 1;
                
				IF vIDVAGA IS NOT NULL THEN 
						UPDATE VAGA SET SITUACAO = "OCUPADA" WHERE IDVAGA = vIDVAGA;
						INSERT INTO TICKET VALUES(DEFAULT, vIDVAGA, NOW(), NULL, NULL, NULL, NULL, NULL);		
						SET vRESULTADO = CONCAT('ESTACIONE NA VAGA NÚMERO ', vIDVAGA);
				ELSE 
					SET vRESULTADO = "SEM VAGAS DISPONÍVEIS";
				END IF;
		END IF;
        
	ELSE 
		 SET vRESULTADO = 'TIPO INVÁLIDO';
	END IF;
    
    RETURN vRESULTADO;
END $$
DELIMITER ; 

SELECT EMITIRTICKET("Especial");
-- -------------------------------------------------------------------------------


-- ----------------------------- OCUPAR VAGA -------------------------------------

DROP FUNCTION OCUPAR;
DELIMITER $$
CREATE FUNCTION OCUPAR(pIDVAGA INT) RETURNS VARCHAR(4500)
READS SQL DATA
DETERMINISTIC
BEGIN
		DECLARE vIDVAGA INT;
		DECLARE vSITUACAO VARCHAR(4500);
        DECLARE vRESULTADO VARCHAR(4500);
		DECLARE vDHENTRADA DATETIME;
        
        SET vIDVAGA = pIDVAGA;
            
            SELECT DHENTRADA INTO vDHENTRADA FROM TICKET WHERE vIDVAGA = IDVAGA AND DTFINALIZADO IS NULL;
            
			IF vDHENTRADA IS NULL THEN
				UPDATE TICKET SET DHENTRADA = NOW() WHERE vIDVAGA = IDVAGA;	
				SET vRESULTADO = CONCAT("VAGA ", vIDVAGA, " ACABOU DE SER OCUPADA");
			ELSE 
				SET vRESULTADO = CONCAT("VAGA ", vIDVAGA, " JÁ ESTÁ OCUPADA");
               
			END IF;
	RETURN vRESULTADO;
END $$
DELIMITER ; 

SELECT OCUPAR(4);

SELECT * FROM TICKET;
-- -------------------------------------------------------------------------------

-- -------------------------------- PAGAR ----------------------------------------
DROP FUNCTION PAGAR;
DELIMITER $$
CREATE FUNCTION PAGAR (pIDVAGA INT) RETURNS VARCHAR(4500)
READS SQL DATA
DETERMINISTIC
BEGIN

	DECLARE vMINUTOS INT;
    DECLARE vHORAS INT;
    DECLARE vVALORTICKET DOUBLE;
    DECLARE vVALORPRIMEIRAHORA DOUBLE;
    DECLARE vVALORHORA DOUBLE;
    DECLARE vRESULTADO VARCHAR(4500);
    
    SELECT VALORPRIMEIRAHORA INTO vVALORPRIMEIRAHORA FROM VALOR;
	SELECT VALORHORA INTO vVALORHORA FROM VALOR;
	
    
	SELECT HOUR(TIMEDIFF(NOW(), DHEMISSAO)) INTO vHORAS FROM TICKET WHERE IDVAGA = pIDVAGA AND DTFINALIZADO IS NULL;  
	SELECT MINUTE(TIMEDIFF(NOW(), DHEMISSAO)) INTO vMINUTOS FROM TICKET WHERE IDVAGA = pIDVAGA AND DTFINALIZADO IS NULL; 
	
  
    
   
			 IF(vHORAS > 0) THEN
					CASE 
						WHEN vHORAS = 1 THEN SET vVALORTICKET = vVALORTICKET + vVALORPRIMEIRAHORA;
						WHEN vHORAS = 2 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 3 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 4 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 5 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 6 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 7 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 8 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 9 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
						WHEN vHORAS = 10 THEN SET vVALORTICKET = vVALORPRIMEIRAHORA + ((vHORAS - 1) * vVALORHORA);
                        WHEN vHORAS > 10 THEN SET vVALORTICKET = 30;
					END CASE;
                    
                    
			END IF;	
				IF (vMINUTOS > 0 AND vHORAS <= 10) THEN
					CASE 
						WHEN vMINUTOS < 15 THEN SET vVALORTICKET = vVALORTICKET + (vVALORHORA/4);
						WHEN vMINUTOS < 30 THEN SET vVALORTICKET = vVALORTICKET + (vVALORHORA/4) * 2;
						WHEN vMINUTOS < 45 THEN SET vVALORTICKET = vVALORTICKET + (vVALORHORA/4) * 3;
					END CASE;
				END IF;
                
                
                UPDATE TICKET SET DHPAGAMENTO = NOW(), VALOR = vVALORTICKET WHERE IDVAGA = pIDVAGA AND DHPAGAMENTO IS NULL;
                SET vRESULTADO = CONCAT("VALOR TOTAL = ", vVALORTICKET);
                RETURN vRESULTADO;
		

END $$
DELIMITER ;


SELECT PAGAR(4);

SELECT * FROM TICKET;


-- ---------------------------------- SAIR VAGA -----------------------------------------



DELIMITER $$
CREATE PROCEDURE SP_DHSAIDA( pIDVAGA INT, pRESULTADO VARCHAR(4500))
BEGIN
	
   
    IF(pIDVAGA IS NOT NULL) THEN
		UPDATE TICKET SET DHSAIDA = NOW() WHERE pIDVAGA = IDVAGA AND DTFINALIZADO IS NULL; 
		UPDATE VAGA SET SITUACAO = "LIVRE" WHERE VAGA.IDVAGA = pIDVAGA;
		SET pRESULTADO = "VAGA LIBERADA!";
    ELSE
		 SET pRESULTADO = "INFORME O NÚMERO DA VAGA";
	END IF;
    
		
END $$
DELIMITER ;

CALL SP_DHSAIDA(4, @RESULT);


SELECT * FROM TICKET;


-- --------------------- FINALIZAR / SAIR ESTACIONAMENTO -----------------------------

DELIMITER $$
CREATE PROCEDURE SP_DTFINALIZADO(pIDVAGA INT, pRESULT VARCHAR(4500))
BEGIN
	
   
    
		UPDATE TICKET SET DTFINALIZADO = NOW() WHERE IDVAGA = pIDVAGA AND DTFINALIZADO IS NULL;
		UPDATE VAGA SET SITUACAO = "LIVRE" WHERE IDVAGA = pIDVAGA;
    
END $$
DELIMITER ;

CALL SP_DTFINALIZADO(4, @RESULT);
SELECT * FROM TICKET;


-- -------------------------------- View tempo entrada ----------------------------------- 

SELECT
	AVG(timestampdiff(SECOND, DHEMISSAO, DHENTRADA)),
    IDVAGA
FROM TICKET
GROUP BY IDVAGA;


-- --------------------------------- View tempo saída ------------------------------------
SELECT * FROM TICKET;
SELECT 
	AVG(TIMESTAMPDIFF(SECOND, DHPAGAMENTO, DHSAIDA)),
    IDVAGA
FROM TICKET
GROUP BY IDVAGA;



